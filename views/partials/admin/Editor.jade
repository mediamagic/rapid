.page.secondary
	.page-header 
		.page-header-content
			h1 Article Editor
				small &nbsp;
			a.back-button.big.page-back(href="#/main")
.page
	.page-region
		.page-region-content
			.grid
				.row
					.span4(style="width:100%;")
						h3.padding5.bg-color-green.progress-bar(style="position:relative;height:40px;margin:0;")							
							.showHide(style="position:absolute; width:100%;")
								.center.white(ng-click="slideToggle('preview')", ng-class="changeArrowIcon('preview')")
							.bar.bg-color-blue(style="width:{{ upload.preview.progressBar }}%;")
							.progressPercents.white.bold(style="position:absolute; right:10px;") {{ upload.preview.uploadprogress }}
							.a(style="position:absolute;left:5px;top:5px;")
								i.icon-clipboard-2.white
								span.white Article Preview Editor							
						#closedEditorWrapper
							#upperForm
								input.bg-color-green.white.name(type="text", placeholder="article name", ng-model="editor.data.name")																
								select.bg-color-green.white.type(ng-model="editor.data.preview.type")									
									option(value="text") text
									//option(value="video") video
									option(value="flash") flash
									option(value="iframe") iframe
									option(value="image") image
								select.bg-color-green.white.categories(size="3", multiple, ng-multiple="true", ng-model="editor.categories", ng-options="key as value for (key,value) in settings.categories | remove:'all'")
								select.bg-color-green.white.size(ng-model="editor.data.preview.size")									
									option(value="1x1") 1x1
									option(value="1x2") 1x2
									option(value="2x2") 2x2
									option(value="2x1") 2x1																	
								select.bg-color-green.white.linkType(ng-model="editor.data.preview.link.type")									
									option(value="none") none
									option(value="inner") inner
									option(value="external") external
								select.color(style="background-color:{{ editor.data.preview.bgColor }};color:{{ editor.closed.colorInput }};", ng-model="editor.data.preview.bgColor")									
									option(style="background-color:#ffffff;color:#000;", value="#ffffff") white
									option(style="background-color:#8c9299;;color:#fff;", value="#8c9299") grey
									option(style="background-color:#4aa82e;;color:#fff;", value="#4aa82e") green
								input.bg-color-green.white.linkTitle(type="text", placeholder="mouse over title", ng-model="editor.data.preview.link.text", ng-show="checkLinkType('text')")
								input#previewLinkUrlInput.bg-color-green.white.linkUrl(type="text", placeholder="url", ng-model="editor.data.preview.link.url", ng-show="checkLinkType('url')")
							#leftSide
								#textPreview(ui-if="editor.data.preview.type == 'text'", style="background-color:{{ editor.data.preview.bgColor }};")
									textarea#editorClosed.tinyEditor(ui-tinymce="editor.tinymceOptions", ng-model="editor.tempContent.preview.text", rows="15", cols="80", width="700", style="width:700px !important;")
										p(dir="rtl")				
											{{ editor.tempContent.preview.text }}
									input#uploadNewImageTinymce_preview(type="file", accept="image/*", onchange="angular.element(this).scope().uploadResourceImageForTiny('preview', this.files[0])", style="display:none;")
								#flashPreview(ng-show="editor.data.preview.type == 'flash'")
									button(style="position:relative;margin:0 auto; margin-top:10px;margin-bottom:10px;display:block;", ng-click="triggerClick('uploadNewSwfInput_preview')", ng-disabled="upload.preview.uploading") Upload New SWF Resource
									input#uploadNewSwfInput_preview(type="file", accept="application/x-shockwave-flash", onchange="angular.element(this).scope().uploadNewResource('preview', 'flash', this.files[0])", style="display:none;")
									ul#previewSwfs.listview
										li.previewSwf.bg-color-green(ng-repeat="swf in editor.files.flash", ng-class="{ selected:editor.tempContent.preview.flash.data == swf.hashName}", ng-click="showSelectedSwf('preview', swf)")
											h2.icon.icon-font
											.data
												{{ swf.fileName }}
												br
												a(href="{{ host }}/images/swfs/{{ swf.hashName }}", target="_blank") {{ swf.hashName }}
								#iframePreview(ng-show="editor.data.preview.type == 'iframe'")
									input(type="text", ng-model="editor.tempContent.preview.iframe", placeholder="url to external link", style="position:relative; margin:0 auto; margin-top:20px; width:80%; display:block;")
									button(style="position:relative;margin:0 auto; margin-top:20px;display:block;", ng-click="updateIframeDisplay('preview')", ng-disabled="editor.tempContent.preview.iframe.length < 10") Update IFrame
								#imagePreview(ng-show="editor.data.preview.type == 'image'")
									button(style="position:relative;margin:0 auto; margin-top:10px;margin-bottom:10px;display:block;", ng-click="triggerClick('uploadNewImageInput_preview')", ng-disabled="upload.preview.uploading") Upload New Image
									input#uploadNewImageInput_preview(type="file", accept="image/*", onchange="angular.element(this).scope().uploadNewResource('preview', 'image', this.files[0])", style="display:none;")
									ul.previewImages.listview(ui-sortable="{ axis:'y'}", ng-model="editor.tempContent.preview.image")
										li.previewImage.bg-color-green(ng-repeat="image in editor.tempContent.preview.image")
											img.icon(ng-src="{{ host }}images/imgs/{{image.hashName}}")
											.data
												.move(ng-class="{'icon-arrow-down':$first, 'icon-arrow-up':$last, 'icon-menu':$middle}")
												.removeImage.icon-remove(ng-click="removeImage('preview', image)")
												.br 
												span {{ image.fileName }}
												br
												a(href="{{ host }}/images/imgs/{{ image.hashName }}", target="_blank") {{ image.hashName }}
							#rightSide								
								#previewDisplay(ng-class="checkLinked()", style="width:{{editor.display.preview.width}}px;height:{{editor.display.preview.height}}px;margin-top:{{editor.display.preview.margin}}px;background-color:{{ editor.data.preview.bgColor }};")
									.original(style="width:{{editor.display.preview.width}}px;height:{{editor.display.preview.height}}px;", ng-bind-html-unsafe="editor.display.preview.content[editor.data.preview.type]")
									.hover(style="width:{{editor.display.preview.width}}px;height:{{editor.display.preview.height}}px;")
										.content
											.text {{ editor.data.preview.link.text }}
											br
											button לחצו כאן							
						h3.padding5.bg-color-green.progress-bar(style="position:relative; height:40px;margin-top:10px;", ng-show="editor.data.preview.link.type == 'inner'")							
							.a(style="position:absolute;left:5px;top:5px;")
								i.icon-clipboard-2.white
								span.white Article Content Editor
							.showHide(style="position:absolute; width:100%;")									
									.center.white(ng-click="slideToggle('content')", ng-class="changeArrowIcon('content')")
							.bar.bg-color-blue(style="width:{{ upload.content.progressBar }}%;")
							.progressPercents.white.bold(style="position:absolute; right:10px;") {{ upload.content.uploadprogress }}
						#openEditorWrapper(ng-show="editor.data.preview.link.type == 'inner'")
							#upperTypeForm
								#videoContent(ui-if="editor.data.content.type == 'video'")
									input(type="text", ng-model="editor.tempContent.content.video.id", placeholder="youtube video id")									
									span(class="{{ editor.tempContent.content.video.icon }}")									
									button(ng-click="checkVideo('content')") Check Video
								#flashContent(ng-show="editor.data.content.type == 'flash'")
									button(style="position:relative;margin:0 auto; margin-top:10px;margin-bottom:10px;display:block;", ng-click="triggerClick('uploadNewSwfInput_content')", ng-disabled="upload.content.uploading") Upload New SWF Resource
									input#uploadNewSwfInput_content(type="file", accept="application/x-shockwave-flash", onchange="angular.element(this).scope().uploadNewResource('content', 'flash', this.files[0])", style="display:none;")										
									ul#contentSwfs.listview
										li.contentSwf.bg-color-green(ng-repeat="swf in editor.files.flash", ng-class="{ selected:editor.tempContent.content.flash.data == swf.hashName}", ng-click="showSelectedSwf('content', swf)")
											h2.icon.icon-font
											.data
												{{ swf.fileName }}
												br
												a(href="{{ host }}/images/swfs/{{ swf.hashName }}", target="_blank") {{ swf.hashName }}
								#iframeContent(ng-show="editor.data.content.type == 'iframe'")									
									//- input(type="text", ng-model="editor.tempContent.content.iframe", placeholder="url to external link", style="width:300px;")									
									input(type="text", ng-model="editor.tempContent.content.iframe", placeholder="url to external link")
									button(ng-click="updateIframeDisplay('content')", ng-disabled="editor.tempContent.content.iframe.length < 10") Update IFrame
								#imageContent(ng-show="editor.data.content.type == 'image'")
									button(style="position:relative;margin:0 auto; margin-top:10px;margin-bottom:10px;display:block;", ng-click="triggerClick('uploadNewImageInput_content')", ng-disabled="upload.content.uploading") Upload New Image
									input#uploadNewImageInput_content(type="file", accept="image/*", onchange="angular.element(this).scope().uploadNewResource('content', 'image', this.files[0])", style="display:none;")									
									ul.previewImages.listview(ui-sortable="{ axis:'y'}", ng-model="editor.tempContent.content.image")
										li.previewImage.bg-color-green(ng-repeat="image in editor.tempContent.content.image")
											img.icon(ng-src="{{ host }}images/imgs/{{image.hashName}}")
											.data
												.move(ng-class="{'icon-arrow-down':$first, 'icon-arrow-up':$last, 'icon-menu':$middle}")
												.removeImage.icon-remove(ng-click="removeImage('content', image)")
												.br 
												span {{ image.fileName }}
												br
												a(href="{{ host }}/images/imgs/{{ image.hashName }}", target="_blank") {{ image.hashName }}
							#upperForm
								.color
									select(style="background-color:{{ editor.data.content.bgColor }};color:{{ editor.open.colorInput }};", ng-model="editor.data.content.bgColor")									
										option(style="background-color:#ffffff;color:#000;", value="#ffffff") white
										option(style="background-color:#8c9299;;color:#fff;", value="#8c9299") grey
										option(style="background-color:#4aa82e;;color:#fff;", value="#4aa82e") green
								.type
									select.bg-color-green.white(ng-model="editor.data.content.type")									
										option(value="text") text
										option(value="video") video
										option(value="flash") flash
										option(value="iframe") iframe
										option(value="image") image
								.title
									input.bg-color-green.white(type="text", placeholder="title", ng-model="editor.data.sidebar.title")
								.description
									textarea.bg-color-green.white(rows="5", cols="80", placeholder="description", ng-model="editor.data.sidebar.description")
								.readMore
									.title
										input.bg-color-green.white(type="text", placeholder="url title", ng-model="editor.data.sidebar.readMore.title")
								.readMore
									.url
										input#contentLinkUrlInput.bg-color-green.white(type="text", placeholder="url", ng-model="editor.data.sidebar.readMore.url")								
							#contentDisplay
								#rightSide
									.header SKODA RAPID
									.title.green.alfi.bold {{ editor.data.sidebar.title }}
									pre.description.alfi {{ editor.data.sidebar.description }}
									.readMore.alfi
										a.alfi(href="{{ editor.data.sidebar.readMore.url }}", target="_blank") {{ editor.data.sidebar.readMore.title }}									
								#leftSide									
									#textContent(ui-if="editor.data.content.type == 'text'", style="background-color:{{ editor.data.content.bgColor }};")									
										textarea#editorOpen.tinyEditor(ui-tinymce="editor.tinymceContentOptions", ng-model="editor.tempContent.content.text", rows="15", cols="80", width="700", style="width:700px !important;border:none;")
											p(dir="rtl")
												{{ editor.tempContent.content.text }}
										input#uploadNewImageTinymce_content(type="file", accept="image/*", onchange="angular.element(this).scope().uploadResourceImageForTiny('content', this.files[0])", style="display:none;")
									#contentPreviewDisplay(ui-if="editor.data.content.type != 'text'", ng-class="checkLinked()", style="width:{{editor.display.content.width}}px;height:{{editor.display.content.height}}px;margin-top:{{editor.display.content.margin}}px;background-color:{{ editor.data.content.bgColor }};")
										.original(style="width:{{editor.display.content.width}}px;height:{{editor.display.content.height}}px;", ng-bind-html-unsafe="editor.display.content.content[editor.data.content.type]")																	
					button(ng-click="saveContent()", ng-disabled="checkSaveStatus()", style="position:relative;margin:0 auto;display:block;") {{ articleButtonMode }}
					//pre(ng-bind="editor.data | json")					
		